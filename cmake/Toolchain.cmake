INCLUDE(CMakeForceCompiler)

SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_SYSTEM_PROCESSOR ARM)

SET(TOOLCHAIN_PREFIX arm-none-eabi-)

IF(DEFINED ARMGCC_LOCATION)
    SET(BINUTIL_PATH ${ARMGCC_LOCATION})
ELSE()
    MESSAGE(STATUS "ARMGCC_LOCATION is not set, detect toolchain automatically.")
    IF(MINGW
       OR CYGWIN
       OR WIN32)
        SET(UTIL_SEARCH_CMD where)
    ELSEIF(UNIX OR APPLE)
        SET(UTIL_SEARCH_CMD which)
    ENDIF()

    EXECUTE_PROCESS(
        COMMAND ${UTIL_SEARCH_CMD} ${TOOLCHAIN_PREFIX}gcc
        OUTPUT_VARIABLE BINUTIL_PATH
        OUTPUT_STRIP_TRAILING_WHITESPACE)
ENDIF()

GET_FILENAME_COMPONENT(ARM_TOOLCHAIN_DIR ${BINUTIL_PATH} DIRECTORY)

IF(NOT ARM_TOOLCHAIN_DIR MATCHES "MCUXpressoIDE")
    MESSAGE(
        WARNING
            "This may not be the toolchain used by MCUXpressoIDE and may cause compile error."
    )
ELSE()
    INCLUDE_DIRECTORIES(${ARM_TOOLCHAIN_DIR}/../features/include)
ENDIF()

IF(NOT ARM_TOOLCHAIN_DIR)
    MESSAGE(FATAL_ERROR "Cannot detect toolchain. Meke sure it's in the PATH.")
ENDIF()

MESSAGE(STATUS "Using gcc-arm-none-eabi toolchain located at: ${BINUTIL_PATH}.")

IF(${CMAKE_VERSION} VERSION_EQUAL "3.6.0" OR ${CMAKE_VERSION} VERSION_GREATER
                                             "3.6.0")
    SET(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
ELSE()
    SET(CMAKE_EXE_LINKER_FLAGS_INIT "--spec=nosys.specs")
ENDIF()

SET(CMAKE_C_COMPILER ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}gcc)
SET(CMAKE_CXX_COMPILER ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}g++)
SET(CMAKE_ASM_COMPILER ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}gcc)
SET(CMAKE_LINKER ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}g++)
SET(CMAKE_OBJCOPY ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}objcopy)
SET(CMAKE_OBJDUMP ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}objdump)
SET(CMAKE_SIZE_UTIL ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}size)

SET(CMAKE_SYSROOT ${ARM_TOOLCHAIN_DIR}/../arm-none-eabi)
SET(CMAKE_FIND_ROOT_PATH ${BINUTIL_PATH})

SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
